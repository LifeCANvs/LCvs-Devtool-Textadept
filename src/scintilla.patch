Scintilla changes:

* Handle leading whitespace in XPM images in order to prevent crashes.
* Do not clear per-line-values when clearing the first line of a 1-line document.
* Use Qt macros instead of keywords in header.

diff -r 22b6bbb36280 src/XPM.cxx
--- a/src/XPM.cxx	Sat Sep 05 07:55:08 2020 +1000
+++ b/src/XPM.cxx	Fri Oct 02 20:32:13 2020 -0400
@@ -92,6 +92,9 @@
 void XPM::Init(const char *textForm) {
 	// Test done is two parts to avoid possibility of overstepping the memory
 	// if memcmp implemented strangely. Must be 4 bytes at least at destination.
+	while (*textForm == ' ') {
+		textForm++;
+	}
 	if ((0 == memcmp(textForm, "/* X", 4)) && (0 == memcmp(textForm, "/* XPM */", 9))) {
 		// Build the lines form out of the text form
 		std::vector<const char *> linesForm = LinesFormFromTextForm(textForm);
diff -r 123ae5de5bd2 src/CellBuffer.cxx
--- a/src/CellBuffer.cxx	Sat Aug 27 08:02:08 2022 +1000
+++ b/src/CellBuffer.cxx	Fri Sep 09 20:25:52 2022 -0400
@@ -1204,7 +1204,7 @@
 
 	Sci::Line lineRecalculateStart = Sci::invalidPosition;
 
-	if ((position == 0) && (deleteLength == substance.Length())) {
+	if ((position == 0) && (deleteLength == substance.Length()) && LineFromPosition(position) != LineFromPosition(position + deleteLength)) {
 		// If whole buffer is being deleted, faster to reinitialise lines data
 		// than to delete each line.
 		plv->Init();
diff -r 123ae5de5bd2 qt/ScintillaEditBase/ScintillaEditBase.h
--- a/qt/ScintillaEditBase/ScintillaEditBase.h	Sat Aug 27 08:02:08 2022 +1000
+++ b/qt/ScintillaEditBase/ScintillaEditBase.h	Thu Nov 24 10:30:29 2022 -0500
@@ -44,8 +44,8 @@
 #define EXPORT_IMPORT_API __declspec(dllexport)
 #else
 // Defining dllimport upsets moc
-#define EXPORT_IMPORT_API __declspec(dllimport)
-//#define EXPORT_IMPORT_API
+//#define EXPORT_IMPORT_API __declspec(dllimport)
+#define EXPORT_IMPORT_API
 #endif
 #else
 #define EXPORT_IMPORT_API
@@ -69,7 +69,7 @@
 		uptr_t wParam = 0,
 		const char *s = 0) const;
 
-public slots:
+public Q_SLOTS:
 	// Scroll events coming from GUI to be sent to Scintilla.
 	void scrollHorizontal(int value);
 	void scrollVertical(int value);
@@ -78,7 +78,7 @@
 	void notifyParent(Scintilla::NotificationData scn);
 	void event_command(Scintilla::uptr_t wParam, Scintilla::sptr_t lParam);
 
-signals:
+Q_SIGNALS:
 	void horizontalScrolled(int value);
 	void verticalScrolled(int value);
 	void horizontalRangeChanged(int max, int page);
